@import '../base/variables';

// Vertical rhythm mixins
@mixin element-height($number) {
  height: #{$number * $line-height + 'rem'};

  @media screen and (min-width: $tablet-breakpoint) {
    height: #{$number * $line-height-desktop + 'rem'};
  }
}

// Vertical rhythm mixins
@mixin line-height($number) {
  line-height: #{$number * $line-height + 'rem'};

  @media screen and (min-width: $tablet-breakpoint) {
    line-height: #{$number * $line-height-desktop + 'rem'};
  }
}

@mixin margin-top($number) {
  margin-top: #{$number * $line-height + 'rem'};

  @media screen and (min-width: $tablet-breakpoint) {
    margin-top: #{$number * $line-height-desktop + 'rem'};
  }
}

@mixin margin-bottom($number) {
  margin-bottom: #{$number * $line-height + 'rem'};

  @media screen and (min-width: $tablet-breakpoint) {
    margin-bottom: #{$number * $line-height-desktop + 'rem'};
  }
}

@mixin padding-top($number) {
  padding-top: #{$number * $line-height + 'rem'};

  @media screen and (min-width: $tablet-breakpoint) {
    padding-top: #{$number * $line-height-desktop + 'rem'};
  }
}

@mixin padding-bottom($number) {
  padding-bottom: #{$number * $line-height + 'rem'};

  @media screen and (min-width: $tablet-breakpoint) {
    padding-bottom: #{$number * $line-height-desktop + 'rem'};
  }
}

@mixin addSpace($property, $number, $important: '') {
  #{$property}: #{$number * $line-height + 'rem'} #{$important};
  @media screen and (min-width: $tablet-breakpoint) {
    #{$property}: #{$number * $line-height-desktop + 'rem'} #{$important};
  }
}

/*  Custom exponent function  */
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number; //Multiply by $number if exponent less than zero
    }
  } @else if $exponent < 0 {
    @for $i from 1 through -$exponent {
      $value: $value / $number; //Divide by $number if exponent less than zero
    }
  }

  @return $value;
}

/*  Modular Scale Calculator  */
@function ms($value, $ms-ratio: $ratio, $ms-base: $base) {
  $size: pow($ms-ratio, $value) * $ms-base;
  @return #{$size + 'rem'};
}

/*  Layout  */

$column: 6.25%; // 100% / 16 column layout

@mixin width($number) {
  width: #{$number * $column};
}

@mixin offset($number) {
  margin-left: #{$number * $column};
}

@mixin links($link, $visited, $hover, $active) {
  & {
    color: $link;
    &:visited {
      color: $visited;
    }
    &:hover {
      text-decoration: underline;
      color: $hover;
    }
    &:active,
    &:focus {
      color: $active;
    }
  }
}
